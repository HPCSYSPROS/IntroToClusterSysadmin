#!/usr/bin/env perl -w
# IBM(c) 2007 EPL license http://www.eclipse.org/legal/epl-v10.html
#####################################################
#
#   xCAT script resource for NIM (AIX nodes)
#
#####################################################

# if AIX - make sure we include perl 5.8.2 in INC path.
#       Needed to find perl dependencies shipped in deps tarball.
if ($^O =~ /^aix/i) {
    unshift(@INC, qw(/usr/opt/perl5/lib/5.8.2/aix-thread-multi /usr/opt/perl5/lib/5.8.2 /usr/opt/perl5/lib/site_perl/5.8.2/aix-thread-multi /usr/opt/perl5/lib/site_perl/5.8.2));
}

use File::Path;
use IO::Socket;
my $useSocketSSL = eval { require IO::Socket::SSL; };
use Getopt::Long;
use XML::Simple;

# since we don't have syslog set up yet we'll
# just save msgs in a local log file
$logdir = "/var/log/xcat";

if (!-d $logdir) {
    mkpath($logdir);
}

$::sdate = `/bin/date`;
chomp $::sdate;
my $logfile = $logdir . "/xcat.log";

# this log should not contain much so it might be ok to let it grow?
# at least we'll have the errors preserved
open(LOGFILE, ">>", $logfile);
$::LOG_FILE = \*LOGFILE;

# get hostname
$::shorthost = `hostname -s`;
chomp $::shorthost;

my $servnode;

# get the name of my service node/NIM master from the /etc/niminfo file
if (-f "/etc/niminfo") {
    $cmd = "/bin/cat /etc/niminfo | /bin/grep 'NIM_MASTER_HOSTNAME'";
    &runcmd($cmd);
    my $SNline = $::outref;
    my $junk;
    ($junk, $servnode) = split(/=/, $SNline);

    # save the servnode from niminfo in xcatinfo
    my $xcatinfo = "/etc/xcatinfo";
    open(XCATINFO, ">", $xcatinfo);
    print XCATINFO "XCATSERVER=$servnode\n";
    close(XCATINFO);
} else {
    print "$::sdate  xcataixscript: Could not find /etc/niminfo file.\n";
    print $::LOG_FILE "$::sdate  xcataixscript: Could not find /etc/niminfo file.\n";
}
$servnode =~ s/^\s*//;
chomp $servnode;

# create the xcatpost dir
my $cmd = "/bin/mkdir -m 755 -p /xcatpost";
if (&runcmd($cmd) != 0) {
    print "$::sdate xcataixscript: Could not make the /xcatpost directory.\n";
    print $::LOG_FILE "$::sdate xcataixscript: Could not make the /xcatpost directory.\n";
}

# Set a temporary root password
# - the user-provided root passwd will be set by xcataixpost
my $pwcmd = qq~/bin/echo "root:xcatroot" | /bin/chpasswd -c >/dev/null 2>&1~;
if (&runcmd($pwcmd) != 0) {
    print "$::sdate xcataixscript: Could not set password.\n";
    print $::LOG_FILE "$::sdate xcataixscript: Could not set password.\n";
}

#  need fix to support INSTALLDIR !!!!!
#  socket doesn't work at this point of install so need another
#	way to get INSTALLDIR value!!!
my $installdir;
if (!$installdir) {
    $installdir = "/install";
}

# get the contents of the $installdir/postscripts dir on the server
#   - mount dir from server and copy files
# IPv6, should only use NFS version 4 mount
my $mcmd;
my $snipcmd = "host $servnode";
if (((&runcmd($snipcmd) == 0) && ($::outref =~ /:/)) || ($ENV{'USENFSV4ONAIX'} && ($ENV{'USENFSV4ONAIX'} =~ /1|Yes|yes|YES|Y|y/)))
{
    $mcmd = "mkdir -p /xcatmnt; mount -o nolock -o vers=4 $servnode:$installdir/postscripts /xcatmnt";
} else {
    $mcmd = "mkdir -p /xcatmnt; mount -o nolock $servnode:$installdir/postscripts /xcatmnt";
}
if (&runcmd($mcmd) != 0) {
    print "$::sdate xcataixscript: Could not mount $installdir/postscripts from $servnode.\n";
    print $::LOG_FILE "$::sdate xcataixscript: Could not mount $installdir/postscripts from $servnode.\n";
}

my $cpcmd;
if ((@ARGV == 0) || ($ARGV[0] != 2)) {
    $cpcmd = "/bin/cp -r /xcatmnt/* /xcatpost >/dev/null 2>&1";
} else {

    # when argv[1]=2, there is only one postscript file,
    #   user wants only download it to save time
    $cpcmd = "/bin/cp /xcatmnt/$ARGV[1] /xcatpost >/dev/null 2>&1";
}

if (&runcmd($cpcmd) != 0) {
    print "$::sdate xcataixscript: Could not copy postscripts to /xcatpost.\n";
    print $::LOG_FILE "$::sdate xcataixscript: Could not copy postscripts to /xcatpost.\n";
}

# make sure all are executable
my $chcmd = "/bin/chmod +x /xcatpost/*";
if (&runcmd($chcmd) != 0) {
    print "$::sdate xcataixscript: Could not change /xcatpost file permissions.\n";
    print $::LOG_FILE "$::sdate xcataixscript: Could not change /xcatpost file permissions.\n";
}

my $ucmd = "/usr/sbin/umount /xcatmnt; /bin/rmdir /xcatmnt";
if (&runcmd($ucmd) != 0) {
    print "$::sdate xcataixscript: Could not unmount $installdir.\n";
    print $::LOG_FILE "$::sdate xcataixscript: Could not unmount $installdir/postscripts.\n";
}

# add xcat to /etc/inittab???
# see if it is already there
my $lsicmd = "/usr/sbin/lsitab xcat > /dev/null 2>&1";
if (&runcmd($lsicmd) != 0) {

    # ok - create the entry
    my $mkitab_cmd = '/usr/sbin/mkitab "xcat:2:wait:/xcatpost/xcataixpost > /dev/console 2>&1"';
    if (&runcmd($mkitab_cmd) != 0) {
        print "$::sdate xcataixscript: Could not add xcataixpost to /etc/inittab.\n";
        print $::LOG_FILE "$::sdate xcataixscript: Could not add xcataixpost to /etc/inittab.\n";
    }
}

close($::LOG_FILE);

exit 0;

#####################################################
#
# run the command
#
#####################################################
sub runcmd
{
    my ($cmd) = @_;
    my $rc = 0;
    $cmd .= ' 2>&1';
    $::outref = `$cmd`;
    if ($?)
    {
        $rc = $? >> 8;
        if ($rc > 0)
        {
            print "$::sdate  xcataixscript: $::outref\n";
            print $::LOG_FILE "$::sdate  xcataixscript: $::outref\n";
        }
    }
    return $rc;
}
